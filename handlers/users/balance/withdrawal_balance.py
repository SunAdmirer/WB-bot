import asyncio

from aiogram import types
from aiogram.dispatcher import FSMContext

from filters import NotBanned
from keyboards.inline.balance.withdrawal_kb import show_withdrawal_form_keyboard, next_step_withdrawal_kb
from loader import dp
from utils.db_api.models import Users


@dp.callback_query_handler(NotBanned(), text="withdrawal", state="*")
async def withdrawal_balance(call: types.CallbackQuery, user: Users, state: FSMContext, **kwargs):
    text = "<b>ü§ë –í—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤</b>\n\n" \
           f"<b>–í–∞—à id:</b> {user.telegram_id}\n" \
           f"<b>–í–∞–º –¥–æ—Å—Ç—É–ø–Ω–æ –¥–ª—è –≤—ã–≤–æ–¥–∞:</b> {user.balance} —Ä—É–±.\n\n" \
           f"*–≤—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤ –æ—Ç 500 —Ä—É–±.*\n\n" \
           f"üëáüèª –í—ã–≤–µ—Å—Ç–∏ —Å—Ä–µ–¥—Å—Ç–≤–∞:"

    markup = await show_withdrawal_form_keyboard()

    await call.message.edit_text(text, reply_markup=markup)


@dp.callback_query_handler(NotBanned(), text="next_step_withdrawal", state="*")
async def next_step_withdrawal(call: types.CallbackQuery, user: Users, state: FSMContext, **kwargs):
    if user and user.balance >= 500.00:
        markup = await next_step_withdrawal_kb()

        await call.message.edit_text(f"<b>ü§ë –í—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤</b>\n\n"
                                     f"<b>–¢–≤–æ–π id:</b> {user.telegram_id}\n\n"
                                     f"–ß—Ç–æ –±—ã –≤—ã–≤–µ—Å—Ç–∏ —Å—Ä–µ–¥—Å—Ç–≤–∞, –Ω–∞–ø–∏—à–∏ –∞–¥–º–∏–Ω—É @vasilyiusi –∏ "
                                     f"–Ω–µ –∑–∞–±—É–¥—å —É–∫–∞–∑–∞—Ç—å —Å–≤–æ–π id –∏ —Å—É–º–º—É –Ω–∞ –≤—ã–≤–æ–¥.")
        await call.message.edit_reply_markup(markup)
    else:
        error_msg = await call.message.answer("‚ùóÔ∏è–í—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤ –¥–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ –æ—Ç 500 —Ä—É–±.")
        await asyncio.sleep(4)
        await error_msg.delete()
